{"ast":null,"code":"var _jsxFileName = \"/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/components/ProtectedRoute.jsx\";\n// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// Updated to accept 'session' as a prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  session\n}) => {\n  // Check if session exists and has a token\n  // If session is null or token is missing, redirect to login\n  if (!session || !session.token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","session","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// Updated to accept 'session' as a prop\nconst ProtectedRoute = ({ children, session }) => {\n  // Check if session exists and has a token\n  // If session is null or token is missing, redirect to login\n  if (!session || !session.token) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAChD;EACA;EACA,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE;IAC9B,oBAAOJ,OAAA,CAACF,QAAQ;MAACO,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOR,QAAQ;AACjB,CAAC;AAACS,EAAA,GARIV,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}