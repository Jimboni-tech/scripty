{"ast":null,"code":"var _jsxFileName = \"/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/components/mindmaptexteditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './mindmaptexteditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LargeTextEditor = ({\n  isOpen,\n  initialTitle,\n  initialText,\n  onSave,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = useState(initialTitle);\n  const [text, setText] = useState(initialText);\n  const editorRef = useRef(null);\n  useEffect(() => {\n    setTitle(initialTitle);\n    setText(initialText);\n  }, [initialTitle, initialText]);\n  useEffect(() => {\n    if (isOpen && editorRef.current) {\n      editorRef.current.querySelector('input[name=\"nodeTitle\"]').focus();\n    }\n  }, [isOpen]);\n  if (!isOpen) {\n    return null;\n  }\n  const handleSave = () => {\n    onSave(title, text);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      onCancel();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"large-text-editor-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"large-text-editor-content\",\n      ref: editorRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Node Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nodeTitle\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"nodeTitle\",\n          name: \"nodeTitle\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter node title\",\n          className: \"editor-title-input\",\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nodeText\",\n          children: \"Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"nodeText\",\n          name: \"nodeText\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Add detailed notes here...\",\n          className: \"editor-text-area\",\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"save-button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"cancel-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LargeTextEditor, \"xG9+zIfeRWQ+iWLxZC/K0WovQEs=\");\n_c = LargeTextEditor;\nexport default LargeTextEditor;\nvar _c;\n$RefreshReg$(_c, \"LargeTextEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LargeTextEditor","isOpen","initialTitle","initialText","onSave","onCancel","_s","title","setTitle","text","setText","editorRef","current","querySelector","focus","handleSave","handleKeyDown","e","key","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","type","value","onChange","target","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/components/mindmaptexteditor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './mindmaptexteditor.css';\n\nconst LargeTextEditor = ({ isOpen, initialTitle, initialText, onSave, onCancel }) => {\n  const [title, setTitle] = useState(initialTitle);\n  const [text, setText] = useState(initialText);\n  const editorRef = useRef(null);\n\n\n  useEffect(() => {\n    setTitle(initialTitle);\n    setText(initialText);\n  }, [initialTitle, initialText]);\n\n  useEffect(() => {\n\n    if (isOpen && editorRef.current) {\n      editorRef.current.querySelector('input[name=\"nodeTitle\"]').focus();\n    }\n  }, [isOpen]); \n\n  if (!isOpen) {\n    return null;\n  }\n\n  const handleSave = () => {\n    onSave(title, text);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      onCancel();\n    }\n  };\n\n  return (\n    <div className=\"large-text-editor-overlay\">\n      <div className=\"large-text-editor-content\" ref={editorRef}>\n        <div className=\"editor-header\">\n          <h3>Edit Node Content</h3>\n        </div>\n        <div className=\"editor-body\">\n          <label htmlFor=\"nodeTitle\">Title:</label>\n          <input\n            id=\"nodeTitle\"\n            name=\"nodeTitle\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Enter node title\"\n            className=\"editor-title-input\"\n            onKeyDown={handleKeyDown}\n          />\n          <label htmlFor=\"nodeText\">Details:</label>\n          <textarea\n            id=\"nodeText\"\n            name=\"nodeText\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Add detailed notes here...\"\n            className=\"editor-text-area\"\n            onKeyDown={handleKeyDown}\n          ></textarea>\n        </div>\n        <div className=\"editor-actions\">\n          <button onClick={handleSave} className=\"save-button\">Save</button>\n          <button onClick={onCancel} className=\"cancel-button\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LargeTextEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}