{"ast":null,"code":"var _jsxFileName = \"/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/pages/mindmapdashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react'; // Added useCallback\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL || 'http://localhost:5001/api';\n\n// MindMapDashboard now receives session and onLogout from App.js via ProtectedRoute\nconst MindMapDashboard = ({\n  session,\n  onLogout\n}) => {\n  _s();\n  // <--- ADD session, onLogout props\n  const [mindMaps, setMindMaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState(''); // Keeping message for other feedback\n  // const [session, setSession] = useState(null); // <--- REMOVED\n  const navigate = useNavigate();\n\n  // Removed initial useEffect for session loading // <--- REMOVED\n  // It's now handled by App.js and ProtectedRoute\n\n  // const handleLogout = () => { ... }; // <--- REMOVED (now comes from App.js)\n\n  const fetchUserMindMaps = useCallback(async token => {\n    // Wrapped in useCallback\n    setLoading(true);\n    setMessage('Fetching your mind maps...');\n    try {\n      const response = await fetch(`${API_BASE_URL}/mindmaps`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          setMessage('Session expired or unauthorized. Please log in again.');\n          onLogout(); // <--- USE PROP onLogout\n          return;\n        }\n        throw new Error(`Error fetching mind maps: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setMindMaps(data);\n      // Removed: setMessage('Your mind maps loaded!'); // <--- REMOVED THIS LINE\n    } catch (error) {\n      console.error('Fetch mind maps error:', error);\n      setMessage(`Failed to fetch mind maps: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [onLogout]); // <--- DEPEND ON PROP onLogout\n\n  // Fetch maps when session becomes available\n  useEffect(() => {\n    if (session && session.token) {\n      fetchUserMindMaps(session.token);\n    }\n  }, [session, fetchUserMindMaps]); // <--- Depend on session and fetchUserMindMaps\n\n  const handleLoad = id => {\n    navigate(`/mindmap/${id}`);\n  };\n  const handleNew = () => {\n    navigate('/mindmap/new');\n  };\n\n  // if (!session) { return null; } // <--- REMOVED (ProtectedRoute handles this)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Mind Maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNew,\n      children: \"+ New Mind Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : mindMaps.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No mind maps found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mindMaps.map(map => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: map.title || 'Untitled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLoad(map._id),\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, map._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMapDashboard, \"K5Cp6ylOv6yBhzDi/TwoCR2X9oY=\", false, function () {\n  return [useNavigate];\n});\n_c = MindMapDashboard;\nexport default MindMapDashboard;\nvar _c;\n$RefreshReg$(_c, \"MindMapDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_BACKEND_API_URL","MindMapDashboard","session","onLogout","_s","mindMaps","setMindMaps","loading","setLoading","message","setMessage","navigate","fetchUserMindMaps","token","response","fetch","headers","ok","status","Error","statusText","data","json","error","console","handleLoad","id","handleNew","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","title","_id","_c","$RefreshReg$"],"sources":["/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/pages/mindmapdashboard.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react'; // Added useCallback\nimport { useNavigate } from 'react-router-dom';\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_API_URL || 'http://localhost:5001/api';\n\n// MindMapDashboard now receives session and onLogout from App.js via ProtectedRoute\nconst MindMapDashboard = ({ session, onLogout }) => { // <--- ADD session, onLogout props\n  const [mindMaps, setMindMaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState(''); // Keeping message for other feedback\n  // const [session, setSession] = useState(null); // <--- REMOVED\n  const navigate = useNavigate();\n\n  // Removed initial useEffect for session loading // <--- REMOVED\n  // It's now handled by App.js and ProtectedRoute\n\n  // const handleLogout = () => { ... }; // <--- REMOVED (now comes from App.js)\n\n  const fetchUserMindMaps = useCallback(async (token) => { // Wrapped in useCallback\n    setLoading(true);\n    setMessage('Fetching your mind maps...');\n    try {\n      const response = await fetch(`${API_BASE_URL}/mindmaps`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          setMessage('Session expired or unauthorized. Please log in again.');\n          onLogout(); // <--- USE PROP onLogout\n          return;\n        }\n        throw new Error(`Error fetching mind maps: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setMindMaps(data);\n      // Removed: setMessage('Your mind maps loaded!'); // <--- REMOVED THIS LINE\n    } catch (error) {\n      console.error('Fetch mind maps error:', error);\n      setMessage(`Failed to fetch mind maps: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [onLogout]); // <--- DEPEND ON PROP onLogout\n\n  // Fetch maps when session becomes available\n  useEffect(() => {\n    if (session && session.token) {\n      fetchUserMindMaps(session.token);\n    }\n  }, [session, fetchUserMindMaps]); // <--- Depend on session and fetchUserMindMaps\n\n  const handleLoad = (id) => {\n    navigate(`/mindmap/${id}`);\n  };\n\n  const handleNew = () => {\n    navigate('/mindmap/new');\n  };\n\n  // if (!session) { return null; } // <--- REMOVED (ProtectedRoute handles this)\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Your Mind Maps</h2>\n      <button onClick={handleNew}>+ New Mind Map</button>\n      {loading ? (\n        <p>Loading...</p>\n      ) : mindMaps.length === 0 ? (\n        <p>No mind maps found.</p>\n      ) : (\n        <ul>\n          {mindMaps.map(map => (\n            <li key={map._id}>\n              <span>{map.title || 'Untitled'}</span>\n              <button onClick={() => handleLoad(map._id)}>Open</button>\n            </li>\n          ))}\n        </ul>\n      )}\n      {message && <div>{message}</div>} {/* <--- ENSURE THIS LINE IS PRESENT */}\n    </div>\n  );\n};\n\nexport default MindMapDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}