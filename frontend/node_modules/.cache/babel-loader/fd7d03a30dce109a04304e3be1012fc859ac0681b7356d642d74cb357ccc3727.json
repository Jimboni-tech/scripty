{"ast":null,"code":"var _jsxFileName = \"/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/components/dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { LogOut } from 'lucide-react';\nimport MindMapDashboard from '../pages/mindmapdashboard.jsx';\nimport MindMap from '../pages/mindmap.jsx';\nimport './dashboard.css'; // Create this CSS file for dashboard styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [session, setSession] = useState(null);\n  const [loadingSession, setLoadingSession] = useState(true);\n\n  // Load session from localStorage on component mount\n  useEffect(() => {\n    const storedSession = localStorage.getItem('mindmapSession');\n    if (storedSession) {\n      try {\n        const parsedSession = JSON.parse(storedSession);\n        if (parsedSession && parsedSession.token && parsedSession.user) {\n          setSession(parsedSession);\n        } else {\n          localStorage.removeItem('mindmapSession'); // Clear invalid session\n          navigate('/'); // Redirect to login\n        }\n      } catch (e) {\n        console.error(\"Failed to parse session from localStorage in Dashboard\", e);\n        localStorage.removeItem('mindmapSession');\n        navigate('/'); // Redirect to login\n      }\n    } else {\n      navigate('/'); // No session found, redirect to login\n    }\n    setLoadingSession(false);\n  }, [navigate]);\n  const handleLogout = useCallback(() => {\n    setSession(null);\n    localStorage.removeItem('mindmapSession');\n    navigate('/'); // Redirect to login page\n  }, [navigate]);\n  if (loadingSession) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: \"Loading dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  if (!session) {\n    // This should ideally be caught by ProtectedRoute, but as a fallback\n    return null; // Or a loading spinner, or redirect\n  }\n\n  // Determine which child component to render based on the current path\n  const renderChildComponent = () => {\n    if (location.pathname.startsWith('/mindmap/')) {\n      // Pass session down to MindMap for API calls\n      return /*#__PURE__*/_jsxDEV(MindMap, {\n        session: session,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    } else if (location.pathname === '/dashboard') {\n      // Pass session down to MindMapDashboard for API calls\n      return /*#__PURE__*/_jsxDEV(MindMapDashboard, {\n        session: session,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n    return null; // Should not happen with current routing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Mind Map App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-controls\",\n        children: [session.user && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-email\",\n          children: session.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          title: \"Logout\",\n          children: [/*#__PURE__*/_jsxDEV(LogOut, {\n            className: \"logout-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: renderChildComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"N6PU3fw6KtuJv4dsnhv9+55ndbk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","LogOut","MindMapDashboard","MindMap","jsxDEV","_jsxDEV","Dashboard","_s","navigate","location","session","setSession","loadingSession","setLoadingSession","storedSession","localStorage","getItem","parsedSession","JSON","parse","token","user","removeItem","e","console","error","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderChildComponent","pathname","startsWith","onLogout","email","onClick","title","_c","$RefreshReg$"],"sources":["/Users/jimmyzhou/Desktop/Projects/scripty/frontend/src/components/dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { LogOut } from 'lucide-react';\nimport MindMapDashboard from '../pages/mindmapdashboard.jsx';\nimport MindMap from '../pages/mindmap.jsx';\nimport './dashboard.css'; // Create this CSS file for dashboard styling\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [session, setSession] = useState(null);\n  const [loadingSession, setLoadingSession] = useState(true);\n\n  // Load session from localStorage on component mount\n  useEffect(() => {\n    const storedSession = localStorage.getItem('mindmapSession');\n    if (storedSession) {\n      try {\n        const parsedSession = JSON.parse(storedSession);\n        if (parsedSession && parsedSession.token && parsedSession.user) {\n          setSession(parsedSession);\n        } else {\n          localStorage.removeItem('mindmapSession'); // Clear invalid session\n          navigate('/'); // Redirect to login\n        }\n      } catch (e) {\n        console.error(\"Failed to parse session from localStorage in Dashboard\", e);\n        localStorage.removeItem('mindmapSession');\n        navigate('/'); // Redirect to login\n      }\n    } else {\n      navigate('/'); // No session found, redirect to login\n    }\n    setLoadingSession(false);\n  }, [navigate]);\n\n  const handleLogout = useCallback(() => {\n    setSession(null);\n    localStorage.removeItem('mindmapSession');\n    navigate('/'); // Redirect to login page\n  }, [navigate]);\n\n  if (loadingSession) {\n    return <div className=\"dashboard-loading\">Loading dashboard...</div>;\n  }\n\n  if (!session) {\n    // This should ideally be caught by ProtectedRoute, but as a fallback\n    return null; // Or a loading spinner, or redirect\n  }\n\n  // Determine which child component to render based on the current path\n  const renderChildComponent = () => {\n    if (location.pathname.startsWith('/mindmap/')) {\n      // Pass session down to MindMap for API calls\n      return <MindMap session={session} onLogout={handleLogout} />;\n    } else if (location.pathname === '/dashboard') {\n      // Pass session down to MindMapDashboard for API calls\n      return <MindMapDashboard session={session} onLogout={handleLogout} />;\n    }\n    return null; // Should not happen with current routing\n  };\n\n  return (\n    <div className=\"dashboard-layout\">\n      <header className=\"dashboard-header\">\n        <h1 className=\"dashboard-title\">Mind Map App</h1>\n        <div className=\"user-controls\">\n          {session.user && <span className=\"user-email\">{session.user.email}</span>}\n          <button onClick={handleLogout} className=\"logout-btn\" title=\"Logout\">\n            <LogOut className=\"logout-icon\" /> Logout\n          </button>\n        </div>\n      </header>\n      <main className=\"dashboard-content\">\n        {renderChildComponent()}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}